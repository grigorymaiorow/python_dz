# Задача1
# Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число.
# В качестве символа-разделителя используйте пробел.
# Пример: Строка " 12 34 78 9894 4373 123"
# Усложнение: создайте строку чисел через случайные числа. Подсказка: используйте метод строки join для создания строки.

# my_str = '9 34 1989 4373 123'
# my_list = my_str.split()
# my_list = [int(i) for i in my_list]
# print(max(my_list), min(my_list))



# Задача2
# Найдите корни квадратного уравнения Ax² + Bx + C = 0
# Для обоих вариантов:
# - действительные корни
# - комплексные корни
# Примечание:
# - проверить нужное условие перед вычислением корней
# - найти нужные пакеты стандартной библиотеки и функции в них для вычисления кв. корня.


# from math import sqrt as sq1
# from cmath import sqrt as sq2
# a = 3
# b = 6
# c = 3

# variant1
# D = b ** 2 - 4 * a * c
# if D > 0:
#     x1 = (-b + sq1(D)) / 2 * a
#     x2 = (-b - sq1(D)) / 2 * a
# elif D == 0:
#     x1 = -b / 2 * a
#     x2 = None
# else:
#     x1 = (-b + sq2(D)) / 2 * a
#     x2 = (-b - sq2(D)) / 2 * a
# print(x1, x2)

# или

# variant2
# dis = b**2 - 4 * a * c
# # Присваивание в лоб
# # if dis > 0:
# #     sqrt = sq
# # else:
# #     sqrt = csq

# # Тернарный оператор
# sqrt = sq if dis>0 else csq
# x1 = (-b + sqrt(dis))/(2*a)
# x2 = (-b - sqrt(dis))/(2*a)
# print(f"Корни уравнения: {x1:.2f} и {x2:.2f}")



# Задача3
# Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.

num_1 = int(input("Введите первое число: "))
num_2 = int(input("Введите второе число: "))

i = max(num_1, num_2)

while ((i % num_1 != 0) or (i % num_2 != 0)):
    i += 1    
print(i)
